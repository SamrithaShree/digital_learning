# Generated by Django 5.2.6 on 2025-09-24 06:53

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("quiz", "0007_videocategory_video_videoprogress"),
    ]

    operations = [
        migrations.AddField(
            model_name="quiz",
            name="is_active",
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name="quiz",
            name="offline_available",
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name="quiz",
            name="time_limit",
            field=models.IntegerField(default=30),
        ),
        migrations.AddField(
            model_name="quizattempt",
            name="is_synced",
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name="quizattempt",
            name="offline_attempt",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="quizattempt",
            name="sync_attempts",
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name="student",
            name="last_offline_sync",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="student",
            name="offline_mode",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="student",
            name="student_id",
            field=models.CharField(blank=True, max_length=50, null=True, unique=True),
        ),
        migrations.AddField(
            model_name="video",
            name="download_size_mb",
            field=models.IntegerField(default=50),
        ),
        migrations.AddField(
            model_name="video",
            name="offline_available",
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name="videoprogress",
            name="offline_progress",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="videoprogress",
            name="sync_needed",
            field=models.BooleanField(default=False),
        ),
        migrations.CreateModel(
            name="OfflineContent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content_type",
                    models.CharField(
                        choices=[
                            ("quiz", "Quiz"),
                            ("video", "Video"),
                            ("lesson", "Lesson"),
                        ],
                        max_length=50,
                    ),
                ),
                ("content_id", models.IntegerField()),
                ("cached_data", models.JSONField()),
                ("cache_version", models.IntegerField(default=1)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("expires_at", models.DateTimeField()),
            ],
            options={
                "unique_together": {("content_type", "content_id")},
            },
        ),
        migrations.CreateModel(
            name="OfflineSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_id", models.CharField(max_length=100, unique=True)),
                ("session_data", models.JSONField(default=dict)),
                ("quiz_attempts", models.JSONField(default=list)),
                ("video_progress", models.JSONField(default=list)),
                ("is_synced", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("synced_at", models.DateTimeField(blank=True, null=True)),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="quiz.student"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SyncLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sync_type",
                    models.CharField(
                        choices=[
                            ("quiz_attempts", "Quiz Attempts"),
                            ("video_progress", "Video Progress"),
                            ("full_sync", "Full Sync"),
                            ("content_download", "Content Download"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("success", "Success"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("sync_data", models.JSONField(default=dict)),
                ("error_message", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="quiz.student"
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
    ]
